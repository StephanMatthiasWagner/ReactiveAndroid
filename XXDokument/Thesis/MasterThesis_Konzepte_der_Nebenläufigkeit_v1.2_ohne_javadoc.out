\BOOKMARK [0][-]{chapter*.4}{Abbildungsverzeichnis}{}% 1
\BOOKMARK [0][-]{chapter.1}{Einleitung}{}% 2
\BOOKMARK [1][-]{section.1.1}{Motivation}{chapter.1}% 3
\BOOKMARK [1][-]{section.1.2}{Zielsetzung und Vorgehen}{chapter.1}% 4
\BOOKMARK [1][-]{section.1.3}{Begriffsdefinition und Grundlagen der Nebenl\344ufigkeit}{chapter.1}% 5
\BOOKMARK [1][-]{section.1.4}{Prozesse und Threads}{chapter.1}% 6
\BOOKMARK [2][-]{subsection.1.4.1}{Prozess}{section.1.4}% 7
\BOOKMARK [2][-]{subsection.1.4.2}{Thread}{section.1.4}% 8
\BOOKMARK [1][-]{section.1.5}{Botschaftenaustausch und Kommunikation}{chapter.1}% 9
\BOOKMARK [2][-]{subsection.1.5.1}{Geteilte Datei/ Speicher}{section.1.5}% 10
\BOOKMARK [2][-]{subsection.1.5.2}{MessageQueues}{section.1.5}% 11
\BOOKMARK [1][-]{section.1.6}{Risiken von Nebenl\344ufigkeit}{chapter.1}% 12
\BOOKMARK [2][-]{subsection.1.6.1}{Philosophenproblem}{section.1.6}% 13
\BOOKMARK [2][-]{subsection.1.6.2}{Race Conditions}{section.1.6}% 14
\BOOKMARK [2][-]{subsection.1.6.3}{Speicherleck}{section.1.6}% 15
\BOOKMARK [2][-]{subsection.1.6.4}{Reihenfolgeproblem}{section.1.6}% 16
\BOOKMARK [1][-]{section.1.7}{Parallelverarbeitung und Besonderheiten unter Android}{chapter.1}% 17
\BOOKMARK [2][-]{subsection.1.7.1}{Prozesse und Threads unter Android}{section.1.7}% 18
\BOOKMARK [2][-]{subsection.1.7.2}{Besonderheiten im Android Umfeld bez\374glich des Thread Managements}{section.1.7}% 19
\BOOKMARK [1][-]{section.1.8}{Anforderungen an Applikationen}{chapter.1}% 20
\BOOKMARK [1][-]{section.1.9}{Fokus und Eingrenzung}{chapter.1}% 21
\BOOKMARK [0][-]{chapter.2}{Asynchrone Parallelverarbeitung unter Android}{}% 22
\BOOKMARK [1][-]{section.2.1}{Blockierung der Ein-/Ausgabe durch zeitintensive Verarbeitung}{chapter.2}% 23
\BOOKMARK [1][-]{section.2.2}{Parallelverarbeitung mit der Java Standard Edition \(Java Concurrency\)}{chapter.2}% 24
\BOOKMARK [2][-]{subsection.2.2.1}{Handler-Looper-Mechanismus zur Inter-Thread-Kommunikation}{section.2.2}% 25
\BOOKMARK [2][-]{subsection.2.2.2}{Verwendung des Handler- Looper- Mechnismus}{section.2.2}% 26
\BOOKMARK [2][-]{subsection.2.2.3}{Probleme bei der Nutzung des Handler- Looper- Mechanismus}{section.2.2}% 27
\BOOKMARK [2][-]{subsection.2.2.4}{Vorsicht im Umgang mit Java Futures}{section.2.2}% 28
\BOOKMARK [1][-]{section.2.3}{Parallelverarbeitung mit AndroidAsyncTask \(Anroid Concurrency\)}{chapter.2}% 29
\BOOKMARK [2][-]{subsection.2.3.1}{Ausf\374hrungsmodell von Android AsyncTask in Bezug auf Multi- Threading}{section.2.3}% 30
\BOOKMARK [2][-]{subsection.2.3.2}{Serielle Ausf\374hrung in Android AsyncTask}{section.2.3}% 31
\BOOKMARK [1][-]{section.2.4}{Parallelverarbeitung mit RXJava}{chapter.2}% 32
\BOOKMARK [2][-]{subsection.2.4.1}{Imperative und Deklarative Programmierung}{section.2.4}% 33
\BOOKMARK [2][-]{subsection.2.4.2}{Reaktive Programmierung \046 Reactive Manifesto}{section.2.4}% 34
\BOOKMARK [2][-]{subsection.2.4.3}{RX JAVA Entstehung}{section.2.4}% 35
\BOOKMARK [2][-]{subsection.2.4.4}{RXJava Funktionsweise}{section.2.4}% 36
\BOOKMARK [2][-]{subsection.2.4.5}{RXJava in Android}{section.2.4}% 37
\BOOKMARK [1][-]{section.2.5}{Zusammenfassung}{chapter.2}% 38
\BOOKMARK [0][-]{chapter.3}{Konzepte der Nebenl\344ufigkeit im kritischen Diskurs}{}% 39
\BOOKMARK [1][-]{section.3.1}{Chancen und Risiken des Java Concurrency- Konzepts}{chapter.3}% 40
\BOOKMARK [1][-]{section.3.2}{Android Concurrency}{chapter.3}% 41
\BOOKMARK [1][-]{section.3.3}{RXConcurrency}{chapter.3}% 42
\BOOKMARK [1][-]{section.3.4}{Szenariobasierte Analyse}{chapter.3}% 43
\BOOKMARK [1][-]{section.3.5}{Fazit}{chapter.3}% 44
\BOOKMARK [1][-]{section.3.6}{Ausblick}{chapter.3}% 45
\BOOKMARK [0][-]{chapter*.17}{Literaturverzeichnis}{}% 46
\BOOKMARK [0][-]{chapter*.17}{Anhang}{}% 47
\BOOKMARK [0][-]{appendix.A}{Erkl\344rung}{}% 48
